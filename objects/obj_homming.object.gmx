<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_MiKe_schR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>777060</libid>
        <id>68</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//Fire
pFX_PS_Fire = part_system_create();
pFX_PT_Fire = part_type_create();
pFX_Emitter_Fire = part_emitter_create(pFX_PS_Fire);

//Smoke
pFX_PS_Smoke = part_system_create();
pFX_PT_Smoke = part_type_create();
pFX_Emitter_Smoke = part_emitter_create(pFX_PS_Smoke);

//Dark Smoke
pFX_PS_Smoke_Dark = part_system_create();
pFX_PT_Smoke_Dark = part_type_create();
pFX_Emitter_Smoke_Dark = part_emitter_create(pFX_PS_Smoke_Dark);

//Explosion
pFX_PS_explosion = part_system_create();
pFX_PT_explosion_smoke = part_type_create();
pFX_PT_explosion_fires = part_type_create();
pFX_PT_explosion_center = part_type_create();

//Blood
pFX_PS_Blood = part_system_create();
pFX_PT_Blood = part_type_create();
pFX_Emitter_Blood = part_emitter_create(pFX_PS_Blood);

//Magical Hit
pFX_PS_Magical01 = part_system_create();
pFX_PT1_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT2_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT3_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);


//Bubble
pFX_PS_Bubble = part_system_create();
pFX_PT_Bubble = part_type_create();
pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);

//Personal
pFX_PS_SpriteReflection = part_system_create();
pFX_PT_SpriteReflection = part_type_create();
pFX_Emitter_SpriteReflection = part_emitter_create(pFX_PS_SpriteReflection);</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///yeet

gravoid = 0;

global.MiKep = 5;
global.V = 5;
range = 128;

alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SuS SoS SaS sEs sIs
instance_change(obj_player_MiKe,true)
global.momentumgoin = 1;
if vspeed != 0{
    global.cooljump = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Better

if instance_exists(obj_target){
    move_towards_point(instance_nearest(x,y,obj_target).x,instance_nearest(x,y,obj_target).y,15)
}
else{
        global.AvailableSCH = 0;
        hspeed = global.MiKedir*15;
        if vspeed &gt;= 0{
            vspeed = 0;
        }
        global.Momentumgoin = 1;
        if !place_free(x+global.MiKedir*4,y+1){
            instance_change(obj_player_MiKe,true)
        }
}

if gravoid = 1{
    gravity = 0.6
}

//i am   s p e e d  / uno mas edition i guess
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>33</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>{
globalvar pFX_Sprite_SpriteReflection, pFX_Animation_SpriteReflection, pFX_XXp_SpriteReflection, pFX_YYp_SpriteReflection, pFX_Life_SpriteReflection, pFX_Blend_SpriteReflection, pFX_Gravity_SpriteReflection, pFX_Depth_SpriteReflection, pFX_AngleDir_SpriteReflection;
pFX_Sprite_SpriteReflection = argument0;
pFX_Animation_SpriteReflection = argument1;
pFX_XXp_SpriteReflection = argument2;
pFX_YYp_SpriteReflection = argument3;
pFX_Life_SpriteReflection = argument4;
pFX_Blend_SpriteReflection = argument5;
pFX_Gravity_SpriteReflection = 0;
pFX_Dir_SpriteReflection = 270;
pFX_Depth_SpriteReflection = -100000;
pFX_AngleDir_SpriteReflection = 0;

//pFX_PS_SpriteReflection = part_system_create();
part_system_depth(pFX_PS_SpriteReflection,pFX_Depth_SpriteReflection);

//pFX_PT_SpriteReflection = part_type_create();
part_type_sprite(pFX_PT_SpriteReflection,pFX_Sprite_SpriteReflection,pFX_Animation_SpriteReflection,0,0);
part_type_size(pFX_PT_SpriteReflection,1,1,0,0);
part_type_scale(pFX_PT_SpriteReflection,1,1);
part_type_color1(pFX_PT_SpriteReflection,16777215);
part_type_alpha2(pFX_PT_SpriteReflection,0.50,0);
part_type_speed(pFX_PT_SpriteReflection,0,0,0,0);
//part_type_direction(pFX_PT_SpriteReflection,pFX_AngleDir_SpriteReflection,pFX_AngleDir_SpriteReflection,0,0);
part_type_gravity(pFX_PT_SpriteReflection,pFX_Gravity_SpriteReflection,pFX_Dir_SpriteReflection);
part_type_orientation(pFX_PT_SpriteReflection,0,0,0,0,1);
part_type_blend(pFX_PT_SpriteReflection,pFX_Blend_SpriteReflection);
part_type_life(pFX_PT_SpriteReflection,pFX_Life_SpriteReflection,pFX_Life_SpriteReflection);

//pFX_Emitter_SpriteReflection = part_emitter_create(pFX_PS_SpriteReflection);
part_emitter_region(pFX_PS_SpriteReflection,pFX_Emitter_SpriteReflection,pFX_XXp_SpriteReflection,pFX_XXp_SpriteReflection,pFX_YYp_SpriteReflection,pFX_YYp_SpriteReflection,0,0);
part_emitter_burst(pFX_PS_SpriteReflection,pFX_Emitter_SpriteReflection,pFX_PT_SpriteReflection,1);
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_MiKe_effect_j</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations

if (direction &gt; 90) &amp;&amp; (direction &lt; 270){
    image_xscale = -1;
}
if (direction &gt; 270) &amp;&amp; (direction &lt; 90){
    image_xscale = 1;
}

//now actual animations

if (direction &gt; 80) &amp;&amp; (direction &lt; 110){ //up
    sprite_index = spr_MiKe_schU;
}
if (direction &gt; 11) &amp;&amp; (direction &lt; 79){ //up right
    sprite_index = spr_MiKe_schUR;
}
if (direction &gt; 335) &amp;&amp; (direction &lt; 10){ //right
    sprite_index = spr_MiKe_schR;
}
if (direction &gt; 291) &amp;&amp; (direction &lt; 334){ //down right
    sprite_index = spr_MiKe_schDR;
}
if (direction &gt; 260) &amp;&amp; (direction &lt; 280){ //down
    sprite_index = spr_MiKe_schD;
}

if (direction &gt; 111) &amp;&amp; (direction &lt; 174){ //up left
    sprite_index = spr_MiKe_schUR;
}
if (direction &gt; 175) &amp;&amp; (direction &lt; 185){ //left
    sprite_index = spr_MiKe_schR;
}
if (direction &gt; 186) &amp;&amp; (direction &lt; 259){ //down left
    sprite_index = spr_MiKe_schDR;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cancellations
if keyboard_check_pressed(ord('C')){
    if place_free(x,y+1){
        instance_create(x,y,obj_MiKe_stomp);
        audio_play_sound(sound_sd,1,false)
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_trans_boss1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 0;

global.bosshcih -= 10;

if !(distance_to_object(obj_target) &lt; range){
    instance_create(x,y,obj_explosion_fx)
    audio_play_sound(sound_explosion,1,false)
    instance_change(obj_player_MiKe,true)
    global.cooljump = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss_mvl">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 0;

global.bosshcih -= 5;

if !(distance_to_object(obj_target) &lt; range){
    instance_create(x,y,obj_explosion_fx)
    audio_play_sound(sound_explosion,1,false)
    instance_change(obj_player_MiKe,true)
    global.cooljump = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy2sch">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 1;

if !(distance_to_object(obj_target) &lt; range){
    global.cooljump = 1;
    instance_create(x,y,obj_explosion_fx)
    instance_create(other.x,other.y,obj_e2sch_timer)
    audio_play_sound(sound_explosion,1,false)
    instance_create(x,y,obj_player_MiKe)
    instance_destroy();
}

with other{
    repeat(5){
        instance_create(x,y,vfx_enemylol)
    }
    instance_create(x,y,obj_explosion_fx)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 1;

with other{
    repeat(5){
        instance_create(x,y,vfx_enemylol)
    }
    instance_create(x,y,obj_explosion_fx)
    instance_destroy()
}

if !(distance_to_object(obj_target) &lt; range){
    global.cooljump = 1;
    audio_play_sound(sound_explosion,1,false)
    instance_create(x,y,obj_player_MiKe)
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemynodb1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 1;

if !(distance_to_object(obj_target) &lt; range){
    instance_create(x,y,obj_explosion_fx)
    audio_play_sound(sound_explosion,1,false)
    instance_change(obj_player_MiKe,true)
    global.cooljump = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in contact

global.AvailableSCH = 1;

with other{
    repeat(5){
        instance_create(x,y,vfx_enemylol)
    }
    instance_create(x,y,obj_explosion_fx)
    instance_destroy()
}

if !(distance_to_object(obj_target) &lt; range){
    audio_play_sound(sound_explosion,1,false)
    instance_change(obj_player_MiKe,true)
    global.cooljump = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_targetenemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///F :instance_destroy

global.AvailableSCH = 1;

with(other){
    if desT = 1{
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///F :instance_destroy
global.AvailableSCH = 1;
with(other){
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_okboxer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,16)
vspeed = 0;

global.Momentumgoin = 1;
if !place_free(x+global.MiKedir*4,y+1){
    instance_change(obj_player_MiKe,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bg_block_GHZ">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,16)
vspeed = 0;

global.Momentumgoin = 1;
if !place_free(x+global.MiKedir*4,y+1){
    instance_change(obj_player_MiKe,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
