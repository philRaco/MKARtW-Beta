<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

x = 210;
y = 130;

hspeed = 0;
vspeed = 0;

GOworld = 0;
GOlevel = 0;

GOWmx = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

switch(GOworld){
    case 0:
    GOWmx = 0;
    break;
    
    case 1:
    GOWmx = 3;
    break;
    
    case 2:
    GOWmx = 2;
    break;
    
    case 3:
    GOWmx = 4;
    break;
    
    case 4:
    GOWmx = 4;
    break;
    
    case 5:
    GOWmx = 4;
    break;
}

if keyboard_check_pressed(vk_left){
    GOlevel = 0;
    if GOworld != 0 {GOworld -= 1} else {GOworld = 5}
}
if keyboard_check_pressed(vk_right){
    GOlevel = 0;
    if GOworld != 5 {GOworld += 1} else {GOworld = 0}
}

if keyboard_check_pressed(vk_up){
    if GOlevel != 0 {GOlevel -= 1} else {GOlevel = GOWmx}
}
if keyboard_check_pressed(vk_down){
    if GOlevel != GOWmx {GOlevel += 1} else {GOlevel = 0}
}

if keyboard_check_released(vk_enter){
    if GOworld = 0{
        room_goto(room_ttltutorialnobug);
    }
    if GOworld = 1{
        if GOlevel = 1{
            room_goto(room_HCI1);
        }
        if GOlevel = 2{
            room_goto(room_HCI2);
        }
        if GOlevel = 3{
            room_goto(room_HCI3);
        }
        if GOlevel = 4{
            room_goto(room_HCI4);
        }
        if GOlevel = 5{
            room_goto(room_HCI5);
        }
        if GOlevel = 6{
            room_goto(room_HCI_boss1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_set_colour(c_white)
draw_set_halign(fa_center)
draw_set_font(font_some3knucks)

draw_text(x,y-62,"Return to Stage:")

//World thingy
draw_sprite(spr_goworld,GOworld,x,y)

//Level thingy
switch(GOworld){
    case 0:
        draw_text(x,y+40,"Tutorial")
    break;
    //"City Levels"
    case 1:
        switch(GOlevel){
            case 0:
            draw_text(x,y+40,"Haikend Streets")
            break;
            
            case 1:
            draw_text(x,y+40,"Atrocity")
            break;
            
            case 2:
            draw_text(x,y+40,"Len Ta Chi")
            break;
            
            case 3:
            draw_text(x,y+40,"Nightmare Pool")
            break;
        }
    break;
    //"Desert Levels"
    case 2:
        switch(GOlevel){
            case 0:
            draw_text(x,y+40,"Pyramid Force")
            break;
            
            case 1:
            draw_text(x,y+40,"Volcano Heats")
            break;
            
            case 2:
            draw_text(x,y+40,"Rainy Fields")
            break;
        }
    break;
    //"Nature Levels"
    case 3:
        switch(GOlevel){
            case 0:
            draw_text(x,y+40,"Woody Walds")
            break;
            
            case 1:
            draw_text(x,y+40,"Spangetti Marzi")
            break;
            
            case 2:
            draw_text(x,y+40,"TinyWorld")
            break;
            
            case 3:
            draw_text(x,y+40,"Historic Ruins")
            break;
            
            case 4:
            draw_text(x,y+40,"Ice Caverns")
            break;
        }
    break;
    //"Corporation Levels"
    case 4:
        switch(GOlevel){
            case 0:
            draw_text(x,y+40,"Ryded Trap")
            break;
            
            case 1:
            draw_text(x,y+40,"Hero-Kon")
            break;
            
            case 2:
            draw_text(x,y+40,"Thunder Plant")
            break;
            
            case 3:
            draw_text(x,y+40,"Gianta Park")
            break;
            
            case 4:
            draw_text(x,y+40,"Tie Clock")
            break;
        }
    break;
    //Mystery "Levels"
    case 5:
        switch(GOlevel){
            case 0:
            draw_text(x,y+40,"Light Fountain")
            break;
            
            case 1:
            draw_text(x,y+40,"Mystery Islands")
            break;
            
            case 2:
            draw_text(x,y+40,"Tower of Shadow")
            break;
            
            case 3:
            draw_text(x,y+40,"Dark Metheorite")
            break;
            
            case 4:
            draw_text(x,y+40,"Jester Realm")
            break;
        }
    break;
}

draw_set_halign(fa_left)
draw_set_colour(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
